(defun m:expmod (base exp1 m)
  (setq base (float base))
  (setq exp1 (float exp1))
  (cond ((zerop exp1)
      1)
    ((m:evenp exp1)
      (rem (m:square (m:expmod base (/ (float exp1)
              2)
            m))
        m))
    (t (rem (* base (m:expmod base (- exp1 1)
            m))
        m))))
